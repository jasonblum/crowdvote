# Generated by Django 5.2.6 on 2025-09-16 for Plan #23: Simplified Anonymity System

from django.db import migrations, models
import hashlib
from django.conf import settings


def generate_username_hash(username, salt='development-salt-change-in-production'):
    """Generate a one-way hash of the username for anonymity verification."""
    return hashlib.sha256(f"{username}{salt}".encode()).hexdigest()


def populate_hashed_usernames(apps, schema_editor):
    """Populate hashed_username field for existing ballots."""
    Ballot = apps.get_model('democracy', 'Ballot')
    
    # Get the salt from settings, with fallback
    salt = getattr(settings, 'ANONYMITY_SALT', 'development-salt-change-in-production')
    
    for ballot in Ballot.objects.select_related('voter').all():
        ballot.hashed_username = generate_username_hash(ballot.voter.username, salt)
        ballot.save(update_fields=['hashed_username'])


def reverse_populate_hashed_usernames(apps, schema_editor):
    """Reverse migration - clear hashed usernames."""
    Ballot = apps.get_model('democracy', 'Ballot')
    Ballot.objects.update(hashed_username='')


class Migration(migrations.Migration):

    dependencies = [
        ('democracy', '0014_fix_snapshot_blank_fields'),
        ('accounts', '0010_add_vote_anonymously_by_default'),
    ]

    operations = [
        migrations.AddField(
            model_name='ballot',
            name='hashed_username',
            field=models.CharField(default='', max_length=64, help_text="One-way hash of the voter's username for verification"),
            preserve_default=False,
        ),
        migrations.RunPython(
            populate_hashed_usernames,
            reverse_populate_hashed_usernames
        ),
        migrations.AlterField(
            model_name='ballot',
            name='hashed_username',
            field=models.CharField(max_length=64, help_text="One-way hash of the voter's username for verification"),
        ),
    ]
